# Maintainer: only_vip  <onlyme_vip@protonmail.com>
pkgname=picom-git
_gitname=picom
pkgver=1cd505962022.04.13
pkgrel=2
pkgdesc="X compositor (fork of compton) (git-version)"
arch=('i686' 'amd64')
url="https://github.com/yshui/${_gitname}"
license=('MIT MPL2')
depends=('libxext-dev' 'libxcb1-dev' 'libxcb-damage0-dev' 'libxcb-xfixes0-dev' 'libxcb-shape0-dev' 'libxcb-render-util0-dev' 'libxcb-render0-dev' 'libxcb-randr0-dev' 'libxcb-composite0-dev' 'libxcb-image0-dev' 'libxcb-present-dev' 'libxcb-xinerama0-dev' 'libpixman-1-dev' 'libdbus-1-dev' 'libconfig-dev' 'libgl1-mesa-dev' 'libevdev-dev' 'uthash-dev' 'libev-dev' 'libpcre++-dev' 'libx11-xcb-dev' 'libxcb-glx0-dev' 'libpcre3-dev' 'libpcre2-32-0' 'libpcre2-dev' 'libev-libevent-dev' 'libevent-perl' 'libev-perl')
buster_depends=(${depends[@]} 'libpcre2-posix0' 'libverto-libev1' )
focal_depends=(${depends[@]} 'libpcre2-posix2' 'libverto-libevent1')
groovy_depends=(${depends[@]} 'libpcre2-posix2' 'libverto-libevent1')
hirsute_depends=(${depends[@]} 'libpcre2-posix2' 'libverto-libevent1')
makedepends=('git' 'meson' 'asciidoc' 'docbook-xml' 'docbook2x' 'cmake')
optdepends=('dbus:          To control picom via D-Bus'
            'xorg-xwininfo: For picom-trans'
            'xorg-xprop:    For picom-trans'
            'python:        For picom-convgen.py')
provides=('compton' 'picom')
conflicts=('compton' 'picom')
# replaces=('compton' 'picom')
source=("${_gitname}::git+https://github.com/yshui/${_gitname}.git#branch=next")
md5sums=("SKIP")

pkgver() {
    cd "${srcdir}/${_gitname}"
    _always=$(git describe --always | sed -e 's:-:.:g' -e 's:vNext::') # always is mobile, and switches between numbers and letters, can't use it for versioning
    _commits=$(git rev-list --count HEAD | sed 's:-:.:g') # total commits is the most sane way of getting incremental pkgver
    _date=$(git log -1 --date=short --pretty=format:%cd)
    printf "%s%s%s\n" "${_commits}" "${_always}" "${_date}" | sed -e 's:-:.:g'  -e 's:_:.:g'
}
build() {
  cd "${srcdir}/${_gitname}"
  meson --buildtype=release . build --prefix=/usr -Dwith_docs=true
  ninja -C build
}

package() {
  cd "${srcdir}/${_gitname}"

  DESTDIR="${pkgdir}" ninja -C build install

  # install license
  install -D -m644 "LICENSES/MIT" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE-MIT"

  # example conf
  install -D -m644 "picom.sample.conf" "${pkgdir}/etc/xdg/picom.conf.example"
}
